#define	WIDGETS		CONFIG_REVK_WEB_EXTRA_PAGES
#if defined(CONFIG_GFX_BUILD_SUFFIX_LCD24) || defined(CONFIG_GFX_BUILD_SUFFIX_LCD2)
#define	GFX_COLOUR
#define	GFX_LCD
#else
#define	GFX_EPD
#endif

gpio	rgb		2				// RGB

gpio	gfx.pwr						// Display power
gpio	gfx.ena						// Display ENA
gpio	gfx.mosi	40				// Display MOSI
gpio	gfx.sck		39				// Display SCK
gpio	gfx.cs		38				// Display CS
gpio	gfx.dc		37				// Display DC
gpio	gfx.rst		36				// Display RST
gpio	gfx.bl						// Display Backlight
gpio	gfx.busy	35				// Display BUSY
u8	gfx.flip	6				// Display Flip
u8	gfx.low		0	.live .unit="%"		// Display low level (e.g. dark mode)
u8	gfx.high	100	.live .unit="%"		// Display high level (e.g. light mode)
u8	gfx.message	10	.live .unit="s"		// Override/message time
#ifdef	GFX_EPD
bit	gfx.invert	1				// Display invert
bit	gfx.night	1	.live			// Display overnight refresh
u32	refresh		86400	.live .unit="s"		// Full refresh time
#endif

gpio	relay						// Relay output

gpio	btn.u						// Button up (reports to HA)
gpio	btn.d						// Button down (reports to HA)
gpio	btn.l						// Button left (reports to HA)
gpio	btn.r						// Button right (reports to HA)
gpio	btn.p						// Button push (reports to HA)

gpio    sd.dat2                         	// MicroSD DAT2
gpio    sd.dat3         3	.old="sdss"     // MicroSD DAT3 / SS
gpio    sd.cmd          4	.old="sdmosi"   // MicroSD CMD / MOSI
gpio    sd.clk          5	.old="sdsck"    // MicroSD CLK
gpio    sd.dat0         6	.old="sdmiso"   // MicroSD DAT0 / MISO
gpio    sd.dat1                			// MicroSD DAT1
gpio    sd.cd           -7                	// MicroSD CD

u8	startup		10	.unit="s"		// Start up message
u8	leds		25				// Number of LEDs

s32	pos.lat			.live .decimal=7 .unit="°N"	// Latitude
s32	pos.lon			.live .decimal=6 .unit="°E"	// Longitude
s	pos.town		.live 	// Town name (for weather)

s	lights		RGB	.live			// LEDs pattern (colour letters)
u16	light.on		.live	.digits=4 .place="HHMM"	// Lights on time (HHMM). 5000±59 sinrise, 7000±59 sunset
u16	light.off		.live	.digits=4 .place="HHMM"	// Lights off time (HHMM). 5000±59 sinrise, 7000±59 sunset

bit	fb.version		.live			// Assume SNMP desc is FireBrick, extract version

s	baseurl		.live			// Default base URL
u32	cachetime	300 .live		// Default cache for https

#ifdef	GFX_COLOUR
c1	background		.hide .live 		// Background colour
#endif

s	tab			.hide .live .array=WIDGETS	// Tab name
enum	widget.t		.hide .live .array=WIDGETS .enums="Text,Blocks,Digits,Image,QR,HLine,VLine,Bins,Clock"		// Widget type
#ifdef	GFX_COLOUR
c1	widget.f		.hide .live .array=WIDGETS	// Foreground colour
c1	widget.b		.hide .live .array=WIDGETS	// Background colour
#else
enum	widget.k		.hide .live .array=WIDGETS .enums="Normal,Invert,Mask,MaskInvert"	// Plot mode
#endif
s16	widget.x	0	.hide .live .array=WIDGETS			// X position (from left, or -ve from right)
enum	widget.h	0	.hide .live .array=WIDGETS .enums="Left,Centre,Right,Prev"		// Horizontal align
s16	widget.y	0	.hide .live .array=WIDGETS			// Y position (from top, or -ve from bottom)
enum	widget.v	0	.hide .live .array=WIDGETS .enums="Top,Middle,Bottom,Prev"		// Vertical align
u16	widget.s	"_3"	.flags="_ |/" .hide .live .array=WIDGETS			// Widget size
text	widget.c	"$DATE\n$TIME\n\nGO TO WEB\nPAGE SETTINGS\nTO CONFIGURE\n\n$IPV4\n\nepd.revk.uk"	.hide .live .array=WIDGETS                      // Widget content/reference
s	qr.ssid			.live			// WiFi SSID for $WIFI
s	qr.pass			.live			// WiFi pass for $WIFI
s	weather.api		.live			// API key for weatherapi.com
s	api.url			.live			// Generic API URL for $API
u32	api.cache	60	.live .unit="s"		// Min cache time
s	solar.ip					// SolarEdge IP address
u32	solar.sod		.live	.hide		// SolarEdge start of day kWh
u32	solar.day		.live	.hide		// SolarEdge date for sod
c1	seasoncode		.live			// Override season for testing
s	refdate			.live			// Reference date/time (YYYY-MM-DD HH:MM:SS)
s	snmphost		.live			// Hostname for SNMP poll
s	json.sub		.array=5 .old="mqttsub"		// Subscriptions for JSON payload $MQTTn

bit	ha.announce	1					// Home Assistant announce

u16	reporting	60	.unit="s"		// Report interval

gpio	scl						// I2C SCL
gpio	sda						// I2C SDA

gpio	ds18b20						// DS18B20 Temp sensors

u8	mcp9808.i2c		.set .hex .fix		// MCP9808 Temp sensor
s16	mcp9808.dt		.live .decimal=2 .unit="°C"	// MCP9808 Temp offset

u8	tmp1075.i2c		.set .hex .fix		// TMP1075 Temp sensor
s16	tmp1075.dt		.live .decimal=2 .unit="°C"	// TMP1075 Temp offset

u8	scd41.i2c		.set .hex .fix		// SCD41 CO2 sensor
s16	scd41.dt	0	.live .decimal=2 .unit="°C"	// SCD41 Temp offset
u16	scd41.startup	300	.unit="s"		// SCD41 startup delay

u8	gzp6816d.i2c		.set .hex .fix		// GZP6816D Pressure sensor
s16	gzp6816d.dt		.live .decimal=2 .unit="°C"	// GZP6816D Temp offset

u8	veml6040.i2c		.set .hex .fix		// VEML6040 Light sensor
u16	veml6040.dark		.live .decimal=1 .unit="lux"	// Level below which we turn off display

u8	t6793.i2c		.set .hex .fix		// T6793 CO2 sensor

bit	ble.enable					// Enable BLE device scan
s	ble.sensor		.live .array=10		// Name of BLE sensors
